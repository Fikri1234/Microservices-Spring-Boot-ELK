input {
	beats {
		port => 5044
	}
	file {
		type => "logback"
		#Paths must be absolute and cannot be relative.
		path => "C:/Users/user/logs/authentication-service.log"
		codec => "plain"
	}
	
	file {
		type => "logback"
		#Paths must be absolute and cannot be relative.
		path => "C:/Users/user/logs/m-product-service.log"
		codec => "plain"
	}
	
	file {
		type => "logback"
		#Paths must be absolute and cannot be relative.
		path => "C:/Users/user/logs/m-user-service.log"
		codec => "plain"
	}
}
 
filter {
	#If log line contains tab character followed by 'at' then we will tag that entry as stacktrace
	if [message] =~ "\tat" {
		grok {
			match => ["message", "^(\tat)"]
			add_tag => ["stacktrace"]
		}
	}
	grok {
		match => ["message", "(?m)\[%{TIMESTAMP_ISO8601:timestamp}\] \[%{HOSTNAME:host}\] \[%{DATA:thread}\] %{LOGLEVEL:logLevel} %{DATA:class}@%{DATA:method}:%{DATA:line} \- %{GREEDYDATA:msg}"]
	}
	date {
		match => [ "timestamp" , "yyyy-MM-dd HH:mm:ss.SSS" ]
	}
	#mutate {
	#	remove_field => ["message"]
	#}
}
 
output {
   
	stdout {
		codec => rubydebug
	}
 
	# Sending properly parsed log events to elasticsearch
	elasticsearch {
		hosts => [ "localhost:9200" ]
		index => "logback-elk-%{+YYYY.MM.dd}"
	}
    
}